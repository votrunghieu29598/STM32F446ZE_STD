; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\objects\usermain.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\usermain.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I.\USER -I.\SCR -I.\Libraries\CMSIS\Include -I.\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I.\Libraries\STM32F4xx_StdPeriph_Driver\inc -I"C:\Users\Vo Trung Hieu\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" -D__UVISION_VERSION=536 -DSTM32F446xx -DUSE_STDPERIPH_DRIVER -DSTM32F446xx -DHSE_VALUE=8000000 --omf_browse=.\objects\usermain.crf SCR\usermain.cpp]
                          THUMB

                          AREA ||i.ADC_Config||, CODE, READONLY, ALIGN=2

                  ADC_Config PROC
;;;117    }
;;;118    void ADC_Config (void)
000000  b500              PUSH     {lr}
;;;119    {
000002  b09b              SUB      sp,sp,#0x6c
;;;120    	RCC_AHB1PeriphClockCmd (RCC_AHB1Periph_DMA2, ENABLE);
000004  2101              MOVS     r1,#1
000006  0588              LSLS     r0,r1,#22
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;121    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0208              LSLS     r0,r1,#8
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;122    
;;;123    	ADC_InitTypeDef ADC_InitStructure;
;;;124    	ADC_CommonInitTypeDef ADC_CommonInitStructure;
;;;125    	DMA_InitTypeDef  DMA_InitStructure;
;;;126    //	NVIC_InitTypeDef   NVIC_InitStructure;
;;;127    	
;;;128    	DMA_DeInit(DMA2_Stream0);
000014  4831              LDR      r0,|L1.220|
000016  f7fffffe          BL       DMA_DeInit
;;;129    	DMA_InitStructure.DMA_Channel = DMA_Channel_0;  
00001a  2000              MOVS     r0,#0
00001c  9002              STR      r0,[sp,#8]
;;;130      DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)0x4001204C;
00001e  4830              LDR      r0,|L1.224|
000020  9003              STR      r0,[sp,#0xc]
;;;131      DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&value_adc;
000022  4830              LDR      r0,|L1.228|
000024  9004              STR      r0,[sp,#0x10]
;;;132      DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
000026  2000              MOVS     r0,#0
000028  9005              STR      r0,[sp,#0x14]
;;;133      DMA_InitStructure.DMA_BufferSize = 1;
00002a  2001              MOVS     r0,#1
00002c  9006              STR      r0,[sp,#0x18]
;;;134      DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
00002e  2000              MOVS     r0,#0
000030  9007              STR      r0,[sp,#0x1c]
;;;135      DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000032  f44f6080          MOV      r0,#0x400
000036  9008              STR      r0,[sp,#0x20]
;;;136      DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
000038  0040              LSLS     r0,r0,#1
00003a  9009              STR      r0,[sp,#0x24]
;;;137      DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
00003c  0080              LSLS     r0,r0,#2
00003e  900a              STR      r0,[sp,#0x28]
;;;138      DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
000040  1140              ASRS     r0,r0,#5
000042  900b              STR      r0,[sp,#0x2c]
;;;139      DMA_InitStructure.DMA_Priority = DMA_Priority_High;
000044  0240              LSLS     r0,r0,#9
000046  900c              STR      r0,[sp,#0x30]
;;;140      DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
000048  2000              MOVS     r0,#0
00004a  900d              STR      r0,[sp,#0x34]
;;;141      DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
00004c  2001              MOVS     r0,#1
00004e  900e              STR      r0,[sp,#0x38]
;;;142      DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
000050  2000              MOVS     r0,#0
000052  900f              STR      r0,[sp,#0x3c]
;;;143      DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
000054  9010              STR      r0,[sp,#0x40]
;;;144      DMA_Init(DMA2_Stream0, &DMA_InitStructure);
000056  a902              ADD      r1,sp,#8
000058  4820              LDR      r0,|L1.220|
00005a  f7fffffe          BL       DMA_Init
;;;145      DMA_Cmd(DMA2_Stream0, ENABLE);
00005e  2101              MOVS     r1,#1
000060  481e              LDR      r0,|L1.220|
000062  f7fffffe          BL       DMA_Cmd
;;;146    	
;;;147    	GPIO_Config(GPIOA, 
000066  2001              MOVS     r0,#1
000068  2100              MOVS     r1,#0
00006a  460b              MOV      r3,r1
00006c  2203              MOVS     r2,#3
00006e  e9cd1000          STRD     r1,r0,[sp,#0]
000072  2108              MOVS     r1,#8
000074  481c              LDR      r0,|L1.232|
000076  f7fffffe          BL       GPIO_Config
;;;148    							GPIO_Pin_3, 
;;;149    							GPIO_Mode_AN,
;;;150    							GPIO_OType_PP,
;;;151    							GPIO_PuPd_NOPULL,
;;;152    							GPIO_Speed_25MHz);
;;;153    	
;;;154    	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
00007a  2000              MOVS     r0,#0
00007c  9011              STR      r0,[sp,#0x44]
;;;155      ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
00007e  9012              STR      r0,[sp,#0x48]
;;;156      ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
000080  9013              STR      r0,[sp,#0x4c]
;;;157      ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_10Cycles;
000082  f44f60a0          MOV      r0,#0x500
000086  9014              STR      r0,[sp,#0x50]
;;;158      ADC_CommonInit(&ADC_CommonInitStructure);
000088  a811              ADD      r0,sp,#0x44
00008a  f7fffffe          BL       ADC_CommonInit
;;;159    	
;;;160    	ADC_InitStructure.ADC_ScanConvMode = DISABLE;
00008e  2000              MOVS     r0,#0
000090  f88d0058          STRB     r0,[sp,#0x58]
;;;161    	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
000094  2001              MOVS     r0,#1
000096  f88d0059          STRB     r0,[sp,#0x59]
;;;162    	ADC_InitStructure.ADC_NbrOfConversion = 1;
00009a  f88d0068          STRB     r0,[sp,#0x68]
;;;163    	ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConvEdge_None;
00009e  2000              MOVS     r0,#0
0000a0  9018              STR      r0,[sp,#0x60]
;;;164    	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
0000a2  9019              STR      r0,[sp,#0x64]
;;;165    	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
0000a4  9015              STR      r0,[sp,#0x54]
;;;166    	ADC_Init(ADC1, &ADC_InitStructure);
0000a6  a915              ADD      r1,sp,#0x54
0000a8  480d              LDR      r0,|L1.224|
0000aa  384c              SUBS     r0,r0,#0x4c
0000ac  f7fffffe          BL       ADC_Init
;;;167    
;;;168    //	NVIC_PriorityGroupConfig  (NVIC_PriorityGroup_0);
;;;169    //  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x02;
;;;170    //  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;
;;;171    //  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;172    //	NVIC_InitStructure.NVIC_IRQChannel = DMA2_Stream0_IRQn;
;;;173    //  NVIC_Init(&NVIC_InitStructure);
;;;174    	
;;;175    	ADC_Cmd(ADC1, ENABLE);
0000b0  2101              MOVS     r1,#1
0000b2  480b              LDR      r0,|L1.224|
0000b4  384c              SUBS     r0,r0,#0x4c
0000b6  f7fffffe          BL       ADC_Cmd
;;;176    	ADC_DMARequestAfterLastTransferCmd(ADC1, ENABLE);
0000ba  2101              MOVS     r1,#1
0000bc  4808              LDR      r0,|L1.224|
0000be  384c              SUBS     r0,r0,#0x4c
0000c0  f7fffffe          BL       ADC_DMARequestAfterLastTransferCmd
;;;177      ADC_DMACmd(ADC1, ENABLE);
0000c4  2101              MOVS     r1,#1
0000c6  4806              LDR      r0,|L1.224|
0000c8  384c              SUBS     r0,r0,#0x4c
0000ca  f7fffffe          BL       ADC_DMACmd
;;;178    	ADC_SoftwareStartConv(ADC1);
0000ce  4804              LDR      r0,|L1.224|
0000d0  384c              SUBS     r0,r0,#0x4c
0000d2  f7fffffe          BL       ADC_SoftwareStartConv
;;;179    }
0000d6  b01b              ADD      sp,sp,#0x6c
0000d8  bd00              POP      {pc}
;;;180    
                          ENDP

0000da  0000              DCW      0x0000
                  |L1.220|
                          DCD      0x40026410
                  |L1.224|
                          DCD      0x4001204c
                  |L1.228|
                          DCD      value_adc
                  |L1.232|
                          DCD      0x40020000

                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI15_10_IRQHandler PROC
;;;201    }
;;;202    void EXTI15_10_IRQHandler (void)
000000  b510              PUSH     {r4,lr}
;;;203    {
;;;204    	if(EXTI_GetITStatus(EXTI_Line13))
000002  f44f5000          MOV      r0,#0x2000
000006  f7fffffe          BL       EXTI_GetITStatus
00000a  b190              CBZ      r0,|L2.50|
;;;205      {
;;;206    		LED3 = 1;
00000c  2001              MOVS     r0,#1
00000e  4909              LDR      r1,|L2.52|
000010  6008              STR      r0,[r1,#0]
;;;207    		delay_ms(100);
000012  ed9f0b09          VLDR     d0,|L2.56|
000016  f7fffffe          BL       delay_ms
;;;208    		LED3 = 0;
00001a  2000              MOVS     r0,#0
00001c  4908              LDR      r1,|L2.64|
00001e  f8c102b8          STR      r0,[r1,#0x2b8]
;;;209    		delay_ms(100);
000022  ed9f0b05          VLDR     d0,|L2.56|
000026  f7fffffe          BL       delay_ms
;;;210        /* Clear the EXTI line 13 pending bit */
;;;211        EXTI_ClearITPendingBit(EXTI_Line13);
00002a  f44f5000          MOV      r0,#0x2000
00002e  f7fffffe          BL       EXTI_ClearITPendingBit
                  |L2.50|
;;;212      }
;;;213    }
000032  bd10              POP      {r4,pc}
;;;214    
                          ENDP

                  |L2.52|
                          DCD      0x424082b8
                  |L2.56|
000038  00000000          DCFD     0x4059000000000000 ; 100
00003c  40590000
                  |L2.64|
                          DCD      0x42408000

                          AREA ||i.EXTILine13_Config||, CODE, READONLY, ALIGN=2

                  EXTILine13_Config PROC
;;;89     
;;;90     void EXTILine13_Config(void)
000000  b500              PUSH     {lr}
;;;91     {
000002  b085              SUB      sp,sp,#0x14
;;;92       EXTI_InitTypeDef   EXTI_InitStructure;
;;;93       NVIC_InitTypeDef   NVIC_InitStructure;
;;;94       /* Enable SYSCFG clock */
;;;95       RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000004  2101              MOVS     r1,#1
000006  0388              LSLS     r0,r1,#14
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;96     
;;;97       GPIO_Config(GPIOC, 
00000c  2001              MOVS     r0,#1
00000e  2100              MOVS     r1,#0
000010  460b              MOV      r3,r1
000012  460a              MOV      r2,r1
000014  e9cd1000          STRD     r1,r0,[sp,#0]
000018  0341              LSLS     r1,r0,#13
00001a  4813              LDR      r0,|L3.104|
00001c  f7fffffe          BL       GPIO_Config
;;;98     							GPIO_Pin_13, 
;;;99     							GPIO_Mode_IN,
;;;100    							GPIO_OType_PP,
;;;101    							GPIO_PuPd_NOPULL,
;;;102    							GPIO_Speed_25MHz);
;;;103    
;;;104      SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOC, EXTI_PinSource13);
000020  210d              MOVS     r1,#0xd
000022  2002              MOVS     r0,#2
000024  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;105    
;;;106      EXTI_InitStructure.EXTI_Line = EXTI_Line13;
000028  f44f5000          MOV      r0,#0x2000
00002c  9003              STR      r0,[sp,#0xc]
;;;107      EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
00002e  2000              MOVS     r0,#0
000030  f88d0010          STRB     r0,[sp,#0x10]
;;;108      EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
000034  200c              MOVS     r0,#0xc
000036  f88d0011          STRB     r0,[sp,#0x11]
;;;109      EXTI_InitStructure.EXTI_LineCmd = ENABLE;
00003a  2001              MOVS     r0,#1
00003c  f88d0012          STRB     r0,[sp,#0x12]
;;;110      EXTI_Init(&EXTI_InitStructure);
000040  a803              ADD      r0,sp,#0xc
000042  f7fffffe          BL       EXTI_Init
;;;111    
;;;112      NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
000046  2028              MOVS     r0,#0x28
000048  f88d0008          STRB     r0,[sp,#8]
;;;113      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x04;
00004c  2004              MOVS     r0,#4
00004e  f88d0009          STRB     r0,[sp,#9]
;;;114      NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x04;
000052  f88d000a          STRB     r0,[sp,#0xa]
;;;115      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000056  2001              MOVS     r0,#1
000058  f88d000b          STRB     r0,[sp,#0xb]
;;;116      NVIC_Init(&NVIC_InitStructure);
00005c  a802              ADD      r0,sp,#8
00005e  f7fffffe          BL       NVIC_Init
;;;117    }
000062  b005              ADD      sp,sp,#0x14
000064  bd00              POP      {pc}
;;;118    void ADC_Config (void)
                          ENDP

000066  0000              DCW      0x0000
                  |L3.104|
                          DCD      0x40020800

                          AREA ||i.IWDG_Config||, CODE, READONLY, ALIGN=1

                  IWDG_Config PROC
;;;180    
;;;181    void IWDG_Config(void)
000000  b510              PUSH     {r4,lr}
;;;182    {
;;;183    	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);// mo khoa timer 12bit
000002  f2455055          MOV      r0,#0x5555
000006  f7fffffe          BL       IWDG_WriteAccessCmd
;;;184      IWDG_SetPrescaler(IWDG_Prescaler_256);
00000a  2006              MOVS     r0,#6
00000c  f7fffffe          BL       IWDG_SetPrescaler
;;;185      /* 
;;;186    			t_out = (IWDG_Prescaler_256 * IWDG_SetReload(312))/ f_lsi;
;;;187    						= (256 *312) / 32768 = 2.43 s
;;;188      */   			
;;;189    	IWDG_SetReload(400);
000010  f44f70c8          MOV      r0,#0x190
000014  f7fffffe          BL       IWDG_SetReload
;;;190      /* Reload IWDG counter */
;;;191      IWDG_ReloadCounter();
000018  f7fffffe          BL       IWDG_ReloadCounter
;;;192    
;;;193      IWDG_Enable();
00001c  f7fffffe          BL       IWDG_Enable
;;;194    }
000020  bd10              POP      {r4,pc}
;;;195    uint16_t Read_ADC1(u8 channel)
                          ENDP


                          AREA ||i.Read_ADC1||, CODE, READONLY, ALIGN=2

                  Read_ADC1 PROC
;;;194    }
;;;195    uint16_t Read_ADC1(u8 channel)
000000  b510              PUSH     {r4,lr}
;;;196    {
000002  4604              MOV      r4,r0
;;;197    	ADC_RegularChannelConfig(ADC1, channel, 1, ADC_SampleTime_3Cycles);
000004  2300              MOVS     r3,#0
000006  2201              MOVS     r2,#1
000008  4621              MOV      r1,r4
00000a  4808              LDR      r0,|L5.44|
00000c  f7fffffe          BL       ADC_RegularChannelConfig
;;;198    	ADC_SoftwareStartConv(ADC1);
000010  4806              LDR      r0,|L5.44|
000012  f7fffffe          BL       ADC_SoftwareStartConv
;;;199    	while (ADC_GetFlagStatus(ADC1, ADC_FLAG_EOC) == SET);
000016  bf00              NOP      
                  |L5.24|
000018  2102              MOVS     r1,#2
00001a  4804              LDR      r0,|L5.44|
00001c  f7fffffe          BL       ADC_GetFlagStatus
000020  2801              CMP      r0,#1
000022  d0f9              BEQ      |L5.24|
;;;200    	return ADC_GetConversionValue(ADC1);
000024  4801              LDR      r0,|L5.44|
000026  f7fffffe          BL       ADC_GetConversionValue
;;;201    }
00002a  bd10              POP      {r4,pc}
;;;202    void EXTI15_10_IRQHandler (void)
                          ENDP

                  |L5.44|
                          DCD      0x40012000

                          AREA ||i.User_Loop||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  User_Loop PROC
;;;78     }
;;;79     void User_Loop(){
000000  b510              PUSH     {r4,lr}
;;;80     		value_adc = Read_ADC1(ADC_Channel_3);
000002  2003              MOVS     r0,#3
000004  f7fffffe          BL       Read_ADC1
000008  490c              LDR      r1,|L6.60|
00000a  8008              STRH     r0,[r1,#0]
;;;81     		sprintf(c,"Val_ADC: %d    ",value_adc);
00000c  4608              MOV      r0,r1
00000e  8802              LDRH     r2,[r0,#0]  ; value_adc
000010  a10b              ADR      r1,|L6.64|
000012  480f              LDR      r0,|L6.80|
000014  f7fffffe          BL       __2sprintf
;;;82     		SSD1306_GotoXY (0, 50);
000018  2132              MOVS     r1,#0x32
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       SSD1306_GotoXY
;;;83     		SSD1306_Puts (c, &Font_7x10, SSD1306_COLOR_WHITE);
000020  2201              MOVS     r2,#1
000022  490c              LDR      r1,|L6.84|
000024  480a              LDR      r0,|L6.80|
000026  f7fffffe          BL       SSD1306_Puts
;;;84     		SSD1306_UpdateScreen();
00002a  f7fffffe          BL       SSD1306_UpdateScreen
;;;85     
;;;86     		delay_ms(500);
00002e  ed9f0b0a          VLDR     d0,|L6.88|
000032  f7fffffe          BL       delay_ms
;;;87     		IWDG_ReloadCounter(); 
000036  f7fffffe          BL       IWDG_ReloadCounter
;;;88     }
00003a  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  |L6.60|
                          DCD      value_adc
                  |L6.64|
000040  56616c5f          DCB      "Val_ADC: %d    ",0
000044  4144433a
000048  20256420
00004c  20202000
                  |L6.80|
                          DCD      c
                  |L6.84|
                          DCD      Font_7x10
                  |L6.88|
000058  00000000          DCFD     0x407f400000000000 ; 500
00005c  407f4000

                          AREA ||i.User_Setup||, CODE, READONLY, ALIGN=2

                  User_Setup PROC
;;;25     
;;;26     void User_Setup(){
000000  b51f              PUSH     {r0-r4,lr}
;;;27     	GPIO_Config(GPIOB, 
000002  2001              MOVS     r0,#1
000004  2100              MOVS     r1,#0
000006  460b              MOV      r3,r1
000008  4602              MOV      r2,r0
00000a  e9cd1000          STRD     r1,r0,[sp,#0]
00000e  f2440181          MOV      r1,#0x4081
000012  4844              LDR      r0,|L7.292|
000014  f7fffffe          BL       GPIO_Config
;;;28     							GPIO_Pin_0 |  GPIO_Pin_7 |  GPIO_Pin_14, 
;;;29     							GPIO_Mode_OUT,
;;;30     							GPIO_OType_PP,
;;;31     							GPIO_PuPd_NOPULL,
;;;32     							GPIO_Speed_25MHz);
;;;33     	GPIO_Config(GPIOE, 
000018  2001              MOVS     r0,#1
00001a  2100              MOVS     r1,#0
00001c  460b              MOV      r3,r1
00001e  460a              MOV      r2,r1
000020  e9cd1000          STRD     r1,r0,[sp,#0]
000024  4601              MOV      r1,r0
000026  4840              LDR      r0,|L7.296|
000028  f7fffffe          BL       GPIO_Config
;;;34     							GPIO_Pin_0, 
;;;35     							GPIO_Mode_IN,
;;;36     							GPIO_OType_PP,
;;;37     							GPIO_PuPd_NOPULL,
;;;38     							GPIO_Speed_25MHz);
;;;39     	SysTick_Configuration();
00002c  f7fffffe          BL       SysTick_Configuration
;;;40     	USART_Initstruct(USART2,
000030  2000              MOVS     r0,#0
000032  230c              MOVS     r3,#0xc
000034  e9cd3000          STRD     r3,r0,[sp,#0]
000038  9002              STR      r0,[sp,#8]
00003a  4603              MOV      r3,r0
00003c  f44f32e1          MOV      r2,#0x1c200
000040  21a3              MOVS     r1,#0xa3
000042  9003              STR      r0,[sp,#0xc]
000044  4839              LDR      r0,|L7.300|
000046  f7fffffe          BL       USART_Initstruct
;;;41     									 USART2_Pin2,	
;;;42     									 USART_Buadrate_115200, 
;;;43     								 	 USART_HardwareFlowControl_None, 
;;;44     								 	 USART_Mode_Rx | USART_Mode_Tx, 
;;;45     									 USART_Parity_No, 
;;;46     									 USART_StopBits_1, 
;;;47     									 USART_WordLength_8b);
;;;48     	SSD1306_Init();
00004a  f7fffffe          BL       SSD1306_Init
;;;49     	EXTILine13_Config();
00004e  f7fffffe          BL       EXTILine13_Config
;;;50     	ADC_Config();
000052  f7fffffe          BL       ADC_Config
;;;51     	IWDG_Config();
000056  f7fffffe          BL       IWDG_Config
;;;52     							// cot, hang
;;;53     	SSD1306_GotoXY (0,0);
00005a  2100              MOVS     r1,#0
00005c  4608              MOV      r0,r1
00005e  f7fffffe          BL       SSD1306_GotoXY
;;;54     	SSD1306_Puts ("HELLO STM32F446ZE ", &Font_7x10, SSD1306_COLOR_WHITE);
000062  2201              MOVS     r2,#1
000064  4932              LDR      r1,|L7.304|
000066  a033              ADR      r0,|L7.308|
000068  f7fffffe          BL       SSD1306_Puts
;;;55     	SSD1306_GotoXY (5, 30);
00006c  211e              MOVS     r1,#0x1e
00006e  2005              MOVS     r0,#5
000070  f7fffffe          BL       SSD1306_GotoXY
;;;56     	SSD1306_Puts ("HELLO WORLD", &Font_11x18, SSD1306_COLOR_WHITE);
000074  2201              MOVS     r2,#1
000076  4934              LDR      r1,|L7.328|
000078  a034              ADR      r0,|L7.332|
00007a  f7fffffe          BL       SSD1306_Puts
;;;57     	SSD1306_UpdateScreen();
00007e  f7fffffe          BL       SSD1306_UpdateScreen
;;;58     	
;;;59     	delay_ms(2000);
000082  ed9f0b35          VLDR     d0,|L7.344|
000086  f7fffffe          BL       delay_ms
;;;60     	SSD1306_Clear();
00008a  f7fffffe          BL       SSD1306_Clear
;;;61     	SSD1306_GotoXY (0,0);
00008e  2100              MOVS     r1,#0
000090  4608              MOV      r0,r1
000092  f7fffffe          BL       SSD1306_GotoXY
;;;62     	SSD1306_Puts ("HELLO STM32F446ZE", &Font_7x10, SSD1306_COLOR_WHITE);
000096  2201              MOVS     r2,#1
000098  4925              LDR      r1,|L7.304|
00009a  a031              ADR      r0,|L7.352|
00009c  f7fffffe          BL       SSD1306_Puts
;;;63     	SSD1306_GotoXY (0,10);
0000a0  210a              MOVS     r1,#0xa
0000a2  2000              MOVS     r0,#0
0000a4  f7fffffe          BL       SSD1306_GotoXY
;;;64     	SSD1306_Puts ("Vo Trung Hieu", &Font_7x10, SSD1306_COLOR_WHITE);
0000a8  2201              MOVS     r2,#1
0000aa  4921              LDR      r1,|L7.304|
0000ac  a031              ADR      r0,|L7.372|
0000ae  f7fffffe          BL       SSD1306_Puts
;;;65     	SSD1306_GotoXY (0, 20);
0000b2  2114              MOVS     r1,#0x14
0000b4  2000              MOVS     r0,#0
0000b6  f7fffffe          BL       SSD1306_GotoXY
;;;66     	SSD1306_Puts ("LED1:OFF", &Font_7x10, SSD1306_COLOR_WHITE);
0000ba  2201              MOVS     r2,#1
0000bc  491c              LDR      r1,|L7.304|
0000be  a031              ADR      r0,|L7.388|
0000c0  f7fffffe          BL       SSD1306_Puts
;;;67     	SSD1306_GotoXY (0, 30);
0000c4  211e              MOVS     r1,#0x1e
0000c6  2000              MOVS     r0,#0
0000c8  f7fffffe          BL       SSD1306_GotoXY
;;;68     	SSD1306_Puts ("LED2:OFF", &Font_7x10, SSD1306_COLOR_WHITE);
0000cc  2201              MOVS     r2,#1
0000ce  4918              LDR      r1,|L7.304|
0000d0  a02f              ADR      r0,|L7.400|
0000d2  f7fffffe          BL       SSD1306_Puts
;;;69     	SSD1306_GotoXY (0, 40);
0000d6  2128              MOVS     r1,#0x28
0000d8  2000              MOVS     r0,#0
0000da  f7fffffe          BL       SSD1306_GotoXY
;;;70     	SSD1306_Puts ("LED3:OFF", &Font_7x10, SSD1306_COLOR_WHITE);
0000de  2201              MOVS     r2,#1
0000e0  4913              LDR      r1,|L7.304|
0000e2  a02e              ADR      r0,|L7.412|
0000e4  f7fffffe          BL       SSD1306_Puts
;;;71     	SSD1306_GotoXY (60, 20);
0000e8  2114              MOVS     r1,#0x14
0000ea  203c              MOVS     r0,#0x3c
0000ec  f7fffffe          BL       SSD1306_GotoXY
;;;72     	SSD1306_Puts ("LED4:OFF", &Font_7x10, SSD1306_COLOR_WHITE);
0000f0  2201              MOVS     r2,#1
0000f2  490f              LDR      r1,|L7.304|
0000f4  a02c              ADR      r0,|L7.424|
0000f6  f7fffffe          BL       SSD1306_Puts
;;;73     	SSD1306_GotoXY (60, 30);
0000fa  211e              MOVS     r1,#0x1e
0000fc  203c              MOVS     r0,#0x3c
0000fe  f7fffffe          BL       SSD1306_GotoXY
;;;74     	SSD1306_Puts ("LED5:OFF", &Font_7x10, SSD1306_COLOR_WHITE);
000102  2201              MOVS     r2,#1
000104  490a              LDR      r1,|L7.304|
000106  a02b              ADR      r0,|L7.436|
000108  f7fffffe          BL       SSD1306_Puts
;;;75     	SSD1306_GotoXY (60, 40);
00010c  2128              MOVS     r1,#0x28
00010e  203c              MOVS     r0,#0x3c
000110  f7fffffe          BL       SSD1306_GotoXY
;;;76     	SSD1306_Puts ("LED6:OFF", &Font_7x10, SSD1306_COLOR_WHITE);
000114  2201              MOVS     r2,#1
000116  4906              LDR      r1,|L7.304|
000118  a029              ADR      r0,|L7.448|
00011a  f7fffffe          BL       SSD1306_Puts
;;;77     	SSD1306_UpdateScreen();	
00011e  f7fffffe          BL       SSD1306_UpdateScreen
;;;78     }
000122  bd1f              POP      {r0-r4,pc}
;;;79     void User_Loop(){
                          ENDP

                  |L7.292|
                          DCD      0x40020400
                  |L7.296|
                          DCD      0x40021000
                  |L7.300|
                          DCD      0x40004400
                  |L7.304|
                          DCD      Font_7x10
                  |L7.308|
000134  48454c4c          DCB      "HELLO STM32F446ZE ",0
000138  4f205354
00013c  4d333246
000140  3434365a
000144  452000  
000147  00                DCB      0
                  |L7.328|
                          DCD      Font_11x18
                  |L7.332|
00014c  48454c4c          DCB      "HELLO WORLD",0
000150  4f20574f
000154  524c4400
                  |L7.344|
000158  00000000          DCFD     0x409f400000000000 ; 2000
00015c  409f4000
                  |L7.352|
000160  48454c4c          DCB      "HELLO STM32F446ZE",0
000164  4f205354
000168  4d333246
00016c  3434365a
000170  4500    
000172  00                DCB      0
000173  00                DCB      0
                  |L7.372|
000174  566f2054          DCB      "Vo Trung Hieu",0
000178  72756e67
00017c  20486965
000180  7500    
000182  00                DCB      0
000183  00                DCB      0
                  |L7.388|
000184  4c454431          DCB      "LED1:OFF",0
000188  3a4f4646
00018c  00      
00018d  00                DCB      0
00018e  00                DCB      0
00018f  00                DCB      0
                  |L7.400|
000190  4c454432          DCB      "LED2:OFF",0
000194  3a4f4646
000198  00      
000199  00                DCB      0
00019a  00                DCB      0
00019b  00                DCB      0
                  |L7.412|
00019c  4c454433          DCB      "LED3:OFF",0
0001a0  3a4f4646
0001a4  00      
0001a5  00                DCB      0
0001a6  00                DCB      0
0001a7  00                DCB      0
                  |L7.424|
0001a8  4c454434          DCB      "LED4:OFF",0
0001ac  3a4f4646
0001b0  00      
0001b1  00                DCB      0
0001b2  00                DCB      0
0001b3  00                DCB      0
                  |L7.436|
0001b4  4c454435          DCB      "LED5:OFF",0
0001b8  3a4f4646
0001bc  00      
0001bd  00                DCB      0
0001be  00                DCB      0
0001bf  00                DCB      0
                  |L7.448|
0001c0  4c454436          DCB      "LED6:OFF",0
0001c4  3a4f4646
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0

                          AREA ||.ARM.exidx||, LINKORDER=||i.IWDG_Config||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i.IWDG_Config||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i.ADC_Config||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ADC_Config||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i.EXTILine13_Config||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.EXTILine13_Config||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i.User_Setup||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.User_Setup||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i.Read_ADC1||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.Read_ADC1||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i.User_Loop||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.User_Loop||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i.EXTI15_10_IRQHandler||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.EXTI15_10_IRQHandler||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Rx_data
                          %        20

                          AREA ||.data||, DATA, ALIGN=1

                  Rx_indx
000000  0000              DCB      0x00,0x00
                  value_adc
000002  0000              DCB      0x00,0x00
                  c
                          DCDU     0x00000000
000008  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "SCR\\usermain.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_usermain_cpp_494381bc___Z7__REV16j|
#line 138 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_usermain_cpp_494381bc___Z7__REV16j| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_usermain_cpp_494381bc___Z7__REVSHi|
#line 153
|__asm___12_usermain_cpp_494381bc___Z7__REVSHi| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_usermain_cpp_494381bc___Z5__RRXj|
#line 328
|__asm___12_usermain_cpp_494381bc___Z5__RRXj| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
