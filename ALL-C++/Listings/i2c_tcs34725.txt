; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\i2c_tcs34725.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\i2c_tcs34725.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I.\USER -I.\SCR -I.\Libraries\CMSIS\Include -I.\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I.\Libraries\STM32F4xx_StdPeriph_Driver\inc -D__UVISION_VERSION=535 -DSTM32F446xx -DUSE_STDPERIPH_DRIVER -DSTM32F446xx -DHSE_VALUE=8000000 --omf_browse=.\objects\i2c_tcs34725.crf USER\i2c_tcs34725.c]
                          THUMB

                          AREA ||i.TCS34725_Disable||, CODE, READONLY, ALIGN=1

                  TCS34725_Disable PROC
;;;45     }
;;;46     void TCS34725_Disable(I2C_TypeDef* I2Cx)
000000  b538              PUSH     {r3-r5,lr}
;;;47     {
000002  4604              MOV      r4,r0
;;;48         unsigned char cmd = 0x00;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;49     
;;;50         TCS34725_Read(I2Cx, TCS34725_ENABLE, &cmd, 1);
000008  2301              MOVS     r3,#1
00000a  466a              MOV      r2,sp
00000c  2100              MOVS     r1,#0
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       TCS34725_Read
;;;51         cmd = cmd & ~(TCS34725_ENABLE_PON | TCS34725_ENABLE_AEN);
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f0200003          BIC      r0,r0,#3
00001c  9000              STR      r0,[sp,#0]
;;;52         TCS34725_Write(I2Cx, TCS34725_ENABLE, &cmd, 1);
00001e  2301              MOVS     r3,#1
000020  466a              MOV      r2,sp
000022  2100              MOVS     r1,#0
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       TCS34725_Write
;;;53     }
00002a  bd38              POP      {r3-r5,pc}
;;;54     uint16_t TCS34725_GetChannelData(I2C_TypeDef* I2Cx, unsigned char reg)
                          ENDP


                          AREA ||i.TCS34725_Enable||, CODE, READONLY, ALIGN=2

                  TCS34725_Enable PROC
;;;36     }
;;;37     void TCS34725_Enable(I2C_TypeDef* I2Cx)
000000  b538              PUSH     {r3-r5,lr}
;;;38     {
000002  4604              MOV      r4,r0
;;;39         unsigned char cmd = TCS34725_ENABLE_PON;
000004  2001              MOVS     r0,#1
000006  9000              STR      r0,[sp,#0]
;;;40     
;;;41         TCS34725_Write(I2Cx, TCS34725_ENABLE, &cmd, 1);
000008  2301              MOVS     r3,#1
00000a  466a              MOV      r2,sp
00000c  2100              MOVS     r1,#0
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       TCS34725_Write
;;;42         delay_ms(3);
000014  ed9f0b06          VLDR     d0,|L2.48|
000018  f7fffffe          BL       delay_ms
;;;43         cmd = TCS34725_ENABLE_PON | TCS34725_ENABLE_AEN;
00001c  2003              MOVS     r0,#3
00001e  9000              STR      r0,[sp,#0]
;;;44         TCS34725_Write(I2Cx, TCS34725_ENABLE, &cmd, 1);
000020  2301              MOVS     r3,#1
000022  466a              MOV      r2,sp
000024  2100              MOVS     r1,#0
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       TCS34725_Write
;;;45     }
00002c  bd38              POP      {r3-r5,pc}
;;;46     void TCS34725_Disable(I2C_TypeDef* I2Cx)
                          ENDP

00002e  0000              DCW      0x0000
                  |L2.48|
000030  00000000          DCFD     0x4008000000000000 ; 3
000034  40080000

                          AREA ||i.TCS34725_GetChannelData||, CODE, READONLY, ALIGN=1

                  TCS34725_GetChannelData PROC
;;;53     }
;;;54     uint16_t TCS34725_GetChannelData(I2C_TypeDef* I2Cx, unsigned char reg)
000000  b5f8              PUSH     {r3-r7,lr}
;;;55     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;56         unsigned char tmp[2] = {0,0};
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
;;;57         uint16_t data = 0;
00000a  2600              MOVS     r6,#0
;;;58     
;;;59         TCS34725_Read(I2Cx, reg, tmp, 2);
00000c  2302              MOVS     r3,#2
00000e  466a              MOV      r2,sp
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       TCS34725_Read
;;;60         data = ((uint16_t)tmp[1] << 8) | tmp[0];
000018  f89d0000          LDRB     r0,[sp,#0]
00001c  f89d1001          LDRB     r1,[sp,#1]
000020  ea402601          ORR      r6,r0,r1,LSL #8
;;;61     
;;;62         return data;
000024  4630              MOV      r0,r6
;;;63     }
000026  bdf8              POP      {r3-r7,pc}
;;;64     uint8_t TCS34725_GetRawData(I2C_TypeDef* I2Cx, uint16_t *r, uint16_t *g, uint16_t *b, uint16_t *c)
                          ENDP


                          AREA ||i.TCS34725_GetRawData||, CODE, READONLY, ALIGN=1

                  TCS34725_GetRawData PROC
;;;63     }
;;;64     uint8_t TCS34725_GetRawData(I2C_TypeDef* I2Cx, uint16_t *r, uint16_t *g, uint16_t *b, uint16_t *c)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;65     {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  f8dd8020          LDR      r8,[sp,#0x20]
;;;66         unsigned char status[1] = {0};
000010  2000              MOVS     r0,#0
000012  9000              STR      r0,[sp,#0]
;;;67     
;;;68         status[0] = TCS34725_STATUS_AVALID;
000014  2001              MOVS     r0,#1
000016  9000              STR      r0,[sp,#0]
;;;69     
;;;70         TCS34725_Read(I2Cx, TCS34725_STATUS, status, 1);
000018  2301              MOVS     r3,#1
00001a  466a              MOV      r2,sp
00001c  2113              MOVS     r1,#0x13
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       TCS34725_Read
;;;71     
;;;72         if(status[0] & TCS34725_STATUS_AVALID)
000024  f89d0000          LDRB     r0,[sp,#0]
000028  f0000001          AND      r0,r0,#1
00002c  b1b8              CBZ      r0,|L4.94|
;;;73         {
;;;74             *c = TCS34725_GetChannelData(I2Cx, TCS34725_CDATAL);  
00002e  2114              MOVS     r1,#0x14
000030  4638              MOV      r0,r7
000032  f7fffffe          BL       TCS34725_GetChannelData
000036  f8a80000          STRH     r0,[r8,#0]
;;;75             *r = TCS34725_GetChannelData(I2Cx, TCS34725_RDATAL);  
00003a  2116              MOVS     r1,#0x16
00003c  4638              MOV      r0,r7
00003e  f7fffffe          BL       TCS34725_GetChannelData
000042  8020              STRH     r0,[r4,#0]
;;;76             *g = TCS34725_GetChannelData(I2Cx, TCS34725_GDATAL);  
000044  2118              MOVS     r1,#0x18
000046  4638              MOV      r0,r7
000048  f7fffffe          BL       TCS34725_GetChannelData
00004c  8028              STRH     r0,[r5,#0]
;;;77             *b = TCS34725_GetChannelData(I2Cx, TCS34725_BDATAL);
00004e  211a              MOVS     r1,#0x1a
000050  4638              MOV      r0,r7
000052  f7fffffe          BL       TCS34725_GetChannelData
000056  8030              STRH     r0,[r6,#0]
;;;78             return 1;
000058  2001              MOVS     r0,#1
                  |L4.90|
;;;79         }
;;;80         return 0;
;;;81     }
00005a  e8bd83f8          POP      {r3-r9,pc}
                  |L4.94|
00005e  2000              MOVS     r0,#0                 ;80
000060  e7fb              B        |L4.90|
;;;82     
                          ENDP


                          AREA ||i.TCS34725_Init||, CODE, READONLY, ALIGN=1

                  TCS34725_Init PROC
;;;10     }
;;;11     unsigned char TCS34725_Init(I2C_TypeDef* I2Cx, uint8_t TCS34725_pin, uint32_t I2C_Clock)
000000  b5f8              PUSH     {r3-r7,lr}
;;;12     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;13         unsigned char status[1] = {0};
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
;;;14         I2C_Initstruct(I2Cx, TCS34725_pin, I2C_Clock); 
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       I2C_Initstruct
;;;15         TCS34725_Read(I2Cx, TCS34725_ID, status, 1);
000016  2301              MOVS     r3,#1
000018  466a              MOV      r2,sp
00001a  2112              MOVS     r1,#0x12
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       TCS34725_Read
;;;16         return status[0];
000022  f89d0000          LDRB     r0,[sp,#0]
;;;17     }
000026  bdf8              POP      {r3-r7,pc}
;;;18     void TCS34725_SetIntegrationTime(I2C_TypeDef* I2Cx, uint8_t time)
                          ENDP


                          AREA ||i.TCS34725_Read||, CODE, READONLY, ALIGN=1

                  TCS34725_Read PROC
;;;7      }
;;;8      void TCS34725_Read(I2C_TypeDef* I2Cx, uint8_t add_reg, uint8_t* data, uint8_t len){
000000  b5f8              PUSH     {r3-r7,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461f              MOV      r7,r3
;;;9      		I2C_Read_MutiData(I2Cx, TCS34725_I2C_ADDR, add_reg | TCS34725_COMMAND_BIT, len, data);
00000a  f0440280          ORR      r2,r4,#0x80
00000e  463b              MOV      r3,r7
000010  2152              MOVS     r1,#0x52
000012  4630              MOV      r0,r6
000014  9500              STR      r5,[sp,#0]
000016  f7fffffe          BL       I2C_Read_MutiData
;;;10     }
00001a  bdf8              POP      {r3-r7,pc}
;;;11     unsigned char TCS34725_Init(I2C_TypeDef* I2Cx, uint8_t TCS34725_pin, uint32_t I2C_Clock)
                          ENDP


                          AREA ||i.TCS34725_SetGain||, CODE, READONLY, ALIGN=1

                  TCS34725_SetGain PROC
;;;24     
;;;25     void TCS34725_SetGain(I2C_TypeDef* I2Cx, uint8_t gain)
000000  b538              PUSH     {r3-r5,lr}
;;;26     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;27         unsigned char cmd = gain;
000006  9400              STR      r4,[sp,#0]
;;;28     
;;;29         TCS34725_Write(I2Cx,TCS34725_CONTROL, &cmd, 1);
000008  2301              MOVS     r3,#1
00000a  466a              MOV      r2,sp
00000c  210f              MOVS     r1,#0xf
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       TCS34725_Write
;;;30     }
000014  bd38              POP      {r3-r5,pc}
;;;31     
                          ENDP


                          AREA ||i.TCS34725_SetIntegrationTime||, CODE, READONLY, ALIGN=1

                  TCS34725_SetIntegrationTime PROC
;;;17     }
;;;18     void TCS34725_SetIntegrationTime(I2C_TypeDef* I2Cx, uint8_t time)
000000  b538              PUSH     {r3-r5,lr}
;;;19     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;20         unsigned char cmd = time;
000006  9400              STR      r4,[sp,#0]
;;;21     
;;;22         TCS34725_Write(I2Cx, TCS34725_ATIME, &cmd, 1);
000008  2301              MOVS     r3,#1
00000a  466a              MOV      r2,sp
00000c  4619              MOV      r1,r3
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       TCS34725_Write
;;;23     }
000014  bd38              POP      {r3-r5,pc}
;;;24     
                          ENDP


                          AREA ||i.TCS34725_Setup||, CODE, READONLY, ALIGN=1

                  TCS34725_Setup PROC
;;;31     
;;;32     void TCS34725_Setup(I2C_TypeDef* I2Cx)
000000  b510              PUSH     {r4,lr}
;;;33     {
000002  4604              MOV      r4,r0
;;;34         TCS34725_SetIntegrationTime(I2Cx, TCS34725_INTEGRATIONTIME_240MS);
000004  219c              MOVS     r1,#0x9c
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TCS34725_SetIntegrationTime
;;;35         TCS34725_SetGain(I2Cx, TCS34725_GAIN_4X);
00000c  2101              MOVS     r1,#1
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       TCS34725_SetGain
;;;36     }
000014  bd10              POP      {r4,pc}
;;;37     void TCS34725_Enable(I2C_TypeDef* I2Cx)
                          ENDP


                          AREA ||i.TCS34725_Write||, CODE, READONLY, ALIGN=1

                  TCS34725_Write PROC
;;;50     
;;;5      void TCS34725_Write (I2C_TypeDef* I2Cx, uint8_t add_reg, uint8_t* data, uint8_t len){
000000  b5f8              PUSH     {r3-r7,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  461f              MOV      r7,r3
;;;6      		I2C_Write_MutiData(I2Cx, TCS34725_I2C_ADDR, add_reg | TCS34725_COMMAND_BIT, len, data);
00000a  f0440280          ORR      r2,r4,#0x80
00000e  463b              MOV      r3,r7
000010  2152              MOVS     r1,#0x52
000012  4630              MOV      r0,r6
000014  9500              STR      r5,[sp,#0]
000016  f7fffffe          BL       I2C_Write_MutiData
;;;7      }
00001a  bdf8              POP      {r3-r7,pc}
;;;8      void TCS34725_Read(I2C_TypeDef* I2Cx, uint8_t add_reg, uint8_t* data, uint8_t len){
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Rx_data
                          %        59

                          AREA ||.data||, DATA, ALIGN=0

                  Rx_indx
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "USER\\i2c_tcs34725.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_i2c_tcs34725_c_849d2c0d____REV16|
#line 138 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_i2c_tcs34725_c_849d2c0d____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_i2c_tcs34725_c_849d2c0d____REVSH|
#line 153
|__asm___14_i2c_tcs34725_c_849d2c0d____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_i2c_tcs34725_c_849d2c0d____RRX|
#line 328
|__asm___14_i2c_tcs34725_c_849d2c0d____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
