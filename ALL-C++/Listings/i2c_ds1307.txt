; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\i2c_ds1307.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\i2c_ds1307.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I.\USER -I.\SCR -I.\Libraries\CMSIS\Include -I.\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I.\Libraries\STM32F4xx_StdPeriph_Driver\inc -D__UVISION_VERSION=535 -DSTM32F446xx -DUSE_STDPERIPH_DRIVER -DSTM32F446xx -DHSE_VALUE=8000000 --omf_browse=.\objects\i2c_ds1307.crf USER\i2c_ds1307.c]
                          THUMB

                          AREA ||i.DS1307_Init||, CODE, READONLY, ALIGN=1

                  DS1307_Init PROC
;;;50     
;;;5      void DS1307_Init (I2C_TypeDef* I2Cx, uint8_t DS1307_pin, uint32_t I2C_Clock){
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;6      	I2C_Initstruct(I2Cx, DS1307_pin, I2C_Clock);
000008  4632              MOV      r2,r6
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       I2C_Initstruct
;;;7      }
000012  bd70              POP      {r4-r6,pc}
;;;8      uint8_t RTC_Bcd2Bin(uint8_t bcd) {
                          ENDP


                          AREA ||i.RTC_Bcd2Bin||, CODE, READONLY, ALIGN=1

                  RTC_Bcd2Bin PROC
;;;7      }
;;;8      uint8_t RTC_Bcd2Bin(uint8_t bcd) {
000000  4601              MOV      r1,r0
;;;9      	
;;;10     //	return 10 * (bcd >> 4)+(bcd & 0x0F);
;;;11     		uint8_t dec = 10 * (bcd >> 4);
000002  110a              ASRS     r2,r1,#4
000004  eb020282          ADD      r2,r2,r2,LSL #2
000008  0050              LSLS     r0,r2,#1
;;;12     		dec += bcd & 0x0F;
00000a  f001020f          AND      r2,r1,#0xf
00000e  4402              ADD      r2,r2,r0
000010  b2d0              UXTB     r0,r2
;;;13     		return dec;
;;;14     }
000012  4770              BX       lr
;;;15     
                          ENDP


                          AREA ||i.RTC_Bin2Bcd||, CODE, READONLY, ALIGN=1

                  RTC_Bin2Bcd PROC
;;;15     
;;;16     uint8_t RTC_Bin2Bcd(uint8_t bin) {
000000  b510              PUSH     {r4,lr}
000002  4601              MOV      r1,r0
;;;17     		
;;;18     //	return (bin / 10) << 4 | (bin % 10);
;;;19     //		uint8_t low = 0;
;;;20     //		uint8_t high = 0;
;;;21     //		
;;;22     //		/* High nibble */
;;;23     //		high = bin / 10;
;;;24     //		/* Low nibble */
;;;25     //		low = bin - (high * 10);
;;;26     //		
;;;27     //		/* Return */
;;;28     //		return high << 4 | low;
;;;29     	unsigned char high,low;
;;;30       high=bin/10;    high =(high<<4)&0xF0;
000004  200a              MOVS     r0,#0xa
000006  fb91f0f0          SDIV     r0,r1,r0
00000a  b2c3              UXTB     r3,r0
00000c  20f0              MOVS     r0,#0xf0
00000e  ea001303          AND      r3,r0,r3,LSL #4
;;;31       low=bin%10;    low&=0x0F;
000012  200a              MOVS     r0,#0xa
000014  fb91f4f0          SDIV     r4,r1,r0
000018  fb001014          MLS      r0,r0,r4,r1
00001c  b2c2              UXTB     r2,r0
00001e  f002020f          AND      r2,r2,#0xf
;;;32       return ((high)|low);
000022  ea430002          ORR      r0,r3,r2
;;;33     }
000026  bd10              POP      {r4,pc}
;;;34     uint8_t RTC_CheckMinMax(uint8_t val, uint8_t min, uint8_t max) {
                          ENDP


                          AREA ||i.RTC_CheckMinMax||, CODE, READONLY, ALIGN=1

                  RTC_CheckMinMax PROC
;;;33     }
;;;34     uint8_t RTC_CheckMinMax(uint8_t val, uint8_t min, uint8_t max) {
000000  4603              MOV      r3,r0
;;;35     	if (val < min) {
000002  428b              CMP      r3,r1
000004  da01              BGE      |L4.10|
;;;36     		return min;
000006  4608              MOV      r0,r1
                  |L4.8|
;;;37     	} else if (val > max) {
;;;38     		return max;
;;;39     	}
;;;40     	return val;
;;;41     }
000008  4770              BX       lr
                  |L4.10|
00000a  4293              CMP      r3,r2                 ;37
00000c  dd01              BLE      |L4.18|
00000e  4610              MOV      r0,r2                 ;38
000010  e7fa              B        |L4.8|
                  |L4.18|
000012  4618              MOV      r0,r3                 ;40
000014  e7f8              B        |L4.8|
;;;42     
                          ENDP


                          AREA ||i.RTC_GetDateTime||, CODE, READONLY, ALIGN=2

                  RTC_GetDateTime PROC
;;;43     
;;;44     void RTC_GetDateTime(I2C_TypeDef* I2Cx, uint8_t *gio,uint8_t *phut,uint8_t *giay,uint8_t *thu,uint8_t *ngay,uint8_t *thang,uint8_t *nam) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  af10              ADD      r7,sp,#0x40
00000e  e8970780          LDM      r7,{r7-r10}
;;;45     	uint8_t data[7];	uint8_t res;	
;;;46     //	res = IIC_ReadMulti( DS1307_I2C_ADDR, 0x00,7, data);//tu ADD reg=0x00
;;;47     	res = I2C_Read_MutiData(I2Cx,DS1307_I2C_ADDR, 0x00, 7, data);
000012  a801              ADD      r0,sp,#4
000014  2307              MOVS     r3,#7
000016  2200              MOVS     r2,#0
000018  21d0              MOVS     r1,#0xd0
00001a  9000              STR      r0,[sp,#0]
00001c  9803              LDR      r0,[sp,#0xc]
00001e  f7fffffe          BL       I2C_Read_MutiData
000022  4683              MOV      r11,r0
;;;48     	if(res==0)
000024  f1bb0f00          CMP      r11,#0
000028  d125              BNE      |L5.118|
;;;49     	{
;;;50     	*giay = RTC_Bcd2Bin(data[0]);
00002a  f89d0004          LDRB     r0,[sp,#4]
00002e  f7fffffe          BL       RTC_Bcd2Bin
000032  7030              STRB     r0,[r6,#0]
;;;51     	*phut = RTC_Bcd2Bin(data[1]);
000034  f89d0005          LDRB     r0,[sp,#5]
000038  f7fffffe          BL       RTC_Bcd2Bin
00003c  7028              STRB     r0,[r5,#0]
;;;52     	*gio = RTC_Bcd2Bin(data[2]);
00003e  f89d0006          LDRB     r0,[sp,#6]
000042  f7fffffe          BL       RTC_Bcd2Bin
000046  7020              STRB     r0,[r4,#0]
;;;53     	*thu = RTC_Bcd2Bin(data[3]);
000048  f89d0007          LDRB     r0,[sp,#7]
00004c  f7fffffe          BL       RTC_Bcd2Bin
000050  7038              STRB     r0,[r7,#0]
;;;54     	*ngay = RTC_Bcd2Bin(data[4]);
000052  f89d0008          LDRB     r0,[sp,#8]
000056  f7fffffe          BL       RTC_Bcd2Bin
00005a  f8880000          STRB     r0,[r8,#0]
;;;55     	*thang = RTC_Bcd2Bin(data[5]);
00005e  f89d0009          LDRB     r0,[sp,#9]
000062  f7fffffe          BL       RTC_Bcd2Bin
000066  f8890000          STRB     r0,[r9,#0]
;;;56     	*nam = RTC_Bcd2Bin(data[6]);
00006a  f89d000a          LDRB     r0,[sp,#0xa]
00006e  f7fffffe          BL       RTC_Bcd2Bin
000072  f88a0000          STRB     r0,[r10,#0]
                  |L5.118|
;;;57     	}
;;;58     	delay_ms(100);
000076  ed9f0b03          VLDR     d0,|L5.132|
00007a  f7fffffe          BL       delay_ms
;;;59     }
00007e  b007              ADD      sp,sp,#0x1c
000080  e8bd8ff0          POP      {r4-r11,pc}
;;;60     void RTC_SetDateTime(I2C_TypeDef* I2Cx, uint8_t gio,uint8_t phut,uint8_t giay,uint8_t thu,uint8_t ngay,uint8_t thang,uint8_t nam) {
                          ENDP

                  |L5.132|
000084  00000000          DCFD     0x4059000000000000 ; 100
000088  40590000

                          AREA ||i.RTC_SetDateTime||, CODE, READONLY, ALIGN=1

                  RTC_SetDateTime PROC
;;;59     }
;;;60     void RTC_SetDateTime(I2C_TypeDef* I2Cx, uint8_t gio,uint8_t phut,uint8_t giay,uint8_t thu,uint8_t ngay,uint8_t thang,uint8_t nam) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
000010  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;61     	uint8_t data[7];
;;;62     	
;;;63     	data[0] = RTC_Bin2Bcd(RTC_CheckMinMax(giay, 0, 59));
000014  223b              MOVS     r2,#0x3b
000016  2100              MOVS     r1,#0
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       RTC_CheckMinMax
00001e  9000              STR      r0,[sp,#0]
000020  f7fffffe          BL       RTC_Bin2Bcd
000024  f88d0004          STRB     r0,[sp,#4]
;;;64     	data[1] = RTC_Bin2Bcd(RTC_CheckMinMax(phut, 0, 59));
000028  223b              MOVS     r2,#0x3b
00002a  2100              MOVS     r1,#0
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       RTC_CheckMinMax
000032  9000              STR      r0,[sp,#0]
000034  f7fffffe          BL       RTC_Bin2Bcd
000038  f88d0005          STRB     r0,[sp,#5]
;;;65     	data[2] = RTC_Bin2Bcd(RTC_CheckMinMax(gio, 0, 23));
00003c  2217              MOVS     r2,#0x17
00003e  2100              MOVS     r1,#0
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       RTC_CheckMinMax
000046  9000              STR      r0,[sp,#0]
000048  f7fffffe          BL       RTC_Bin2Bcd
00004c  f88d0006          STRB     r0,[sp,#6]
;;;66     	data[3] = RTC_Bin2Bcd(RTC_CheckMinMax(thu, 0, 7));
000050  2207              MOVS     r2,#7
000052  2100              MOVS     r1,#0
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       RTC_CheckMinMax
00005a  9000              STR      r0,[sp,#0]
00005c  f7fffffe          BL       RTC_Bin2Bcd
000060  f88d0007          STRB     r0,[sp,#7]
;;;67     	data[4] = RTC_Bin2Bcd(RTC_CheckMinMax(ngay, 1, 31));
000064  221f              MOVS     r2,#0x1f
000066  2101              MOVS     r1,#1
000068  4648              MOV      r0,r9
00006a  f7fffffe          BL       RTC_CheckMinMax
00006e  9000              STR      r0,[sp,#0]
000070  f7fffffe          BL       RTC_Bin2Bcd
000074  f88d0008          STRB     r0,[sp,#8]
;;;68     	data[5] = RTC_Bin2Bcd(RTC_CheckMinMax(thang, 1, 12));
000078  220c              MOVS     r2,#0xc
00007a  2101              MOVS     r1,#1
00007c  4650              MOV      r0,r10
00007e  f7fffffe          BL       RTC_CheckMinMax
000082  9000              STR      r0,[sp,#0]
000084  f7fffffe          BL       RTC_Bin2Bcd
000088  f88d0009          STRB     r0,[sp,#9]
;;;69     	data[6] = RTC_Bin2Bcd(RTC_CheckMinMax(nam, 0, 99));
00008c  2263              MOVS     r2,#0x63
00008e  2100              MOVS     r1,#0
000090  4658              MOV      r0,r11
000092  f7fffffe          BL       RTC_CheckMinMax
000096  9000              STR      r0,[sp,#0]
000098  f7fffffe          BL       RTC_Bin2Bcd
00009c  f88d000a          STRB     r0,[sp,#0xa]
;;;70     	
;;;71     //	IIC_WriteMulti( DS1307_I2C_ADDR, 0x00,7, data);
;;;72     	I2C_Write_MutiData(I2Cx, DS1307_I2C_ADDR, 0x00, 7, data);
0000a0  a801              ADD      r0,sp,#4
0000a2  2307              MOVS     r3,#7
0000a4  2200              MOVS     r2,#0
0000a6  21d0              MOVS     r1,#0xd0
0000a8  9000              STR      r0,[sp,#0]
0000aa  4638              MOV      r0,r7
0000ac  f7fffffe          BL       I2C_Write_MutiData
;;;73     }
0000b0  e8bd8ffe          POP      {r1-r11,pc}
;;;74     
                          ENDP


                          AREA ||i.dec2bcd||, CODE, READONLY, ALIGN=1

                  dec2bcd PROC
;;;74     
;;;75     uint8_t dec2bcd(uint8_t num)
000000  4601              MOV      r1,r0
;;;76     {
;;;77       return ((num/10 * 16) + (num % 10));
000002  200a              MOVS     r0,#0xa
000004  fb91f2f0          SDIV     r2,r1,r0
000008  fb001212          MLS      r2,r0,r2,r1
00000c  fb91f0f0          SDIV     r0,r1,r0
000010  eb021000          ADD      r0,r2,r0,LSL #4
000014  b2c0              UXTB     r0,r0
;;;78     }
000016  4770              BX       lr
;;;79     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Rx_data
                          %        59

                          AREA ||.data||, DATA, ALIGN=0

                  Rx_indx
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "USER\\i2c_ds1307.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_i2c_ds1307_c_216038ce____REV16|
#line 138 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_i2c_ds1307_c_216038ce____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_i2c_ds1307_c_216038ce____REVSH|
#line 153
|__asm___12_i2c_ds1307_c_216038ce____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_i2c_ds1307_c_216038ce____RRX|
#line 328
|__asm___12_i2c_ds1307_c_216038ce____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
