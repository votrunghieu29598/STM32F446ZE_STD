; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\f4_sys_tick.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\f4_sys_tick.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I.\USER -I.\SCR -I.\Libraries\CMSIS\Include -I.\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I.\Libraries\STM32F4xx_StdPeriph_Driver\inc -D__UVISION_VERSION=535 -DSTM32F446xx -DUSE_STDPERIPH_DRIVER -DSTM32F446xx -DHSE_VALUE=8000000 --omf_browse=.\objects\f4_sys_tick.crf USER\f4_sys_tick.c]
                          THUMB

                          AREA ||i.Delay_Sys_ms||, CODE, READONLY, ALIGN=1

                  Delay_Sys_ms PROC
;;;51     }
;;;52     void Delay_Sys_ms (uint32_t ms){
000000  b500              PUSH     {lr}
000002  4602              MOV      r2,r0
;;;53     	
;;;54     	Delay_Sys_us (ms*100);
000004  2164              MOVS     r1,#0x64
000006  fb02f001          MUL      r0,r2,r1
00000a  f7fffffe          BL       Delay_Sys_us
;;;55     }
00000e  bd00              POP      {pc}
;;;56     
                          ENDP


                          AREA ||i.Delay_Sys_us||, CODE, READONLY, ALIGN=2

                  Delay_Sys_us PROC
;;;46     }
;;;47     void Delay_Sys_us (__IO uint32_t nTime)//delay ngan nhat tu 10 us tro len
000000  b501              PUSH     {r0,lr}
;;;48     { 
;;;49       TimingDelay = nTime;
000002  4904              LDR      r1,|L2.20|
000004  9800              LDR      r0,[sp,#0]
000006  6008              STR      r0,[r1,#0]  ; TimingDelay
;;;50       while(TimingDelay != 0);
000008  bf00              NOP      
                  |L2.10|
00000a  4802              LDR      r0,|L2.20|
00000c  6800              LDR      r0,[r0,#0]  ; TimingDelay
00000e  2800              CMP      r0,#0
000010  d1fb              BNE      |L2.10|
;;;51     }
000012  bd08              POP      {r3,pc}
;;;52     void Delay_Sys_ms (uint32_t ms){
                          ENDP

                  |L2.20|
                          DCD      TimingDelay

                          AREA ||i.SysTick_Configuration||, CODE, READONLY, ALIGN=2

                  SysTick_Configuration PROC
;;;18     }
;;;19     __weak void SysTick_Configuration(void)
000000  b570              PUSH     {r4-r6,lr}
;;;20     { 
;;;21     	Timer6_Delay();
000002  f7fffffe          BL       Timer6_Delay
;;;22       /* Setup SysTick Timer for 1 msec interrupts */
;;;23     	if (SysTick_Config(SystemCoreClock / 1000)) //1000000:us 1000:ms 100000
000006  4825              LDR      r0,|L3.156|
000008  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00000a  f44f727a          MOV      r2,#0x3e8
00000e  fbb0f1f2          UDIV     r1,r0,r2
000012  1e48              SUBS     r0,r1,#1
000014  f1b07f80          CMP      r0,#0x1000000
000018  d301              BCC      |L3.30|
00001a  2001              MOVS     r0,#1
00001c  e01b              B        |L3.86|
                  |L3.30|
00001e  1e48              SUBS     r0,r1,#1
000020  f04f22e0          MOV      r2,#0xe000e000
000024  6150              STR      r0,[r2,#0x14]
000026  1750              ASRS     r0,r2,#29
000028  220f              MOVS     r2,#0xf
00002a  2800              CMP      r0,#0
00002c  da07              BGE      |L3.62|
00002e  0713              LSLS     r3,r2,#28
000030  0e1d              LSRS     r5,r3,#24
000032  4b1b              LDR      r3,|L3.160|
000034  f000040f          AND      r4,r0,#0xf
000038  1f24              SUBS     r4,r4,#4
00003a  551d              STRB     r5,[r3,r4]
00003c  e003              B        |L3.70|
                  |L3.62|
00003e  0713              LSLS     r3,r2,#28
000040  0e1c              LSRS     r4,r3,#24
000042  4b18              LDR      r3,|L3.164|
000044  541c              STRB     r4,[r3,r0]
                  |L3.70|
000046  bf00              NOP      
000048  2000              MOVS     r0,#0
00004a  f04f22e0          MOV      r2,#0xe000e000
00004e  6190              STR      r0,[r2,#0x18]
000050  2007              MOVS     r0,#7
000052  6110              STR      r0,[r2,#0x10]
000054  2000              MOVS     r0,#0
                  |L3.86|
000056  b1f8              CBZ      r0,|L3.152|
;;;24       { 
;;;25       /* Capture error */
;;;26       NVIC_SystemReset();
000058  bf00              NOP      
00005a  bf00              NOP      
00005c  bf00              NOP      
00005e  bf00              NOP      
000060  bf00              NOP      
000062  f3bf8f4f          DSB      
000066  bf00              NOP      
000068  bf00              NOP      
00006a  bf00              NOP      
00006c  480c              LDR      r0,|L3.160|
00006e  380c              SUBS     r0,r0,#0xc
000070  6800              LDR      r0,[r0,#0]
000072  f40060e0          AND      r0,r0,#0x700
000076  490c              LDR      r1,|L3.168|
000078  4308              ORRS     r0,r0,r1
00007a  1d00              ADDS     r0,r0,#4
00007c  4908              LDR      r1,|L3.160|
00007e  390c              SUBS     r1,r1,#0xc
000080  6008              STR      r0,[r1,#0]
000082  bf00              NOP      
000084  bf00              NOP      
000086  bf00              NOP      
000088  f3bf8f4f          DSB      
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  bf00              NOP      
000092  e000              B        |L3.150|
                  |L3.148|
000094  bf00              NOP      
                  |L3.150|
000096  e7fd              B        |L3.148|
                  |L3.152|
;;;27      }
;;;28     //	NVIC_InitTypeDef NVIC_InitStruct;
;;;29     //	NVIC_InitStruct.NVIC_IRQChannel = SysTick_IRQn;
;;;30     //	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
;;;31     //	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
;;;32     //	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
;;;33     //	NVIC_Init(&NVIC_InitStruct);
;;;34     	
;;;35     }
000098  bd70              POP      {r4-r6,pc}
;;;36     __weak void TimingDelay_Decrement(void) 
                          ENDP

00009a  0000              DCW      0x0000
                  |L3.156|
                          DCD      SystemCoreClock
                  |L3.160|
                          DCD      0xe000ed18
                  |L3.164|
                          DCD      0xe000e400
                  |L3.168|
                          DCD      0x05fa0000

                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;42     }
;;;43     __weak void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;44     {
;;;45       TimingDelay_Decrement();
000002  f7fffffe          BL       TimingDelay_Decrement
;;;46     }
000006  bd10              POP      {r4,pc}
;;;47     void Delay_Sys_us (__IO uint32_t nTime)//delay ngan nhat tu 10 us tro len
                          ENDP


                          AREA ||i.Timer6_Delay||, CODE, READONLY, ALIGN=2

                  Timer6_Delay PROC
;;;9      //timer 6
;;;10     void Timer6_Delay (void){
000000  b50e              PUSH     {r1-r3,lr}
;;;11     	RCC_APB1PeriphClockCmd  (RCC_APB1Periph_TIM6, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;12     	TIM_TimeBaseInitTypeDef Timer6_initstruct;
;;;13     	
;;;14     	Timer6_initstruct.TIM_Prescaler = 90 -1;
00000a  2059              MOVS     r0,#0x59
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;15     	Timer6_initstruct.TIM_Period = 0xFFFF;
000010  f64f70ff          MOV      r0,#0xffff
000014  9001              STR      r0,[sp,#4]
;;;16     	TIM_TimeBaseInit  ( TIM6, &Timer6_initstruct);
000016  4669              MOV      r1,sp
000018  4803              LDR      r0,|L5.40|
00001a  f7fffffe          BL       TIM_TimeBaseInit
;;;17     	TIM_Cmd  (TIM6, ENABLE);
00001e  2101              MOVS     r1,#1
000020  4801              LDR      r0,|L5.40|
000022  f7fffffe          BL       TIM_Cmd
;;;18     }
000026  bd0e              POP      {r1-r3,pc}
;;;19     __weak void SysTick_Configuration(void)
                          ENDP

                  |L5.40|
                          DCD      0x40001000

                          AREA ||i.TimingDelay_Decrement||, CODE, READONLY, ALIGN=2

                  TimingDelay_Decrement PROC
;;;35     }
;;;36     __weak void TimingDelay_Decrement(void) 
000000  4804              LDR      r0,|L6.20|
;;;37     {
;;;38       if (TimingDelay != 0)
000002  6800              LDR      r0,[r0,#0]  ; TimingDelay
000004  b120              CBZ      r0,|L6.16|
;;;39       { 
;;;40         TimingDelay--;
000006  4803              LDR      r0,|L6.20|
000008  6800              LDR      r0,[r0,#0]  ; TimingDelay
00000a  1e40              SUBS     r0,r0,#1
00000c  4901              LDR      r1,|L6.20|
00000e  6008              STR      r0,[r1,#0]  ; TimingDelay
                  |L6.16|
;;;41       }
;;;42     }
000010  4770              BX       lr
;;;43     __weak void SysTick_Handler(void)
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      TimingDelay

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;61     }
;;;62     void delay_ms (double delayms){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b04          VPUSH    {d8-d9}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
;;;63     	for(int i = 0 ; i < delayms; i++){
00000e  2400              MOVS     r4,#0
000010  e004              B        |L7.28|
                  |L7.18|
;;;64     		delay_us(1000);
000012  ed9f0b09          VLDR     d0,|L7.56|
000016  f7fffffe          BL       delay_us
00001a  1c64              ADDS     r4,r4,#1              ;63
                  |L7.28|
00001c  4620              MOV      r0,r4                 ;63
00001e  f7fffffe          BL       __aeabi_i2d
000022  ec410b19          VMOV     d9,r0,r1              ;63
000026  ec532b18          VMOV     r2,r3,d8              ;63
00002a  f7fffffe          BL       __aeabi_cdcmple
00002e  d3f0              BCC      |L7.18|
;;;65     	}
;;;66     }
000030  ecbd8b04          VPOP     {d8-d9}
000034  bd10              POP      {r4,pc}
;;;67     
                          ENDP

000036  0000              DCW      0x0000
                  |L7.56|
000038  00000000          DCFD     0x408f400000000000 ; 1000
00003c  408f4000

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;57     
;;;58     void delay_us (double delayus){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b04          VPUSH    {d8-d9}
000006  eeb08a40          VMOV.F32 s16,s0
00000a  eef08a60          VMOV.F32 s17,s1
;;;59     	TIM_SetCounter  ( TIM6,0);
00000e  2100              MOVS     r1,#0
000010  4809              LDR      r0,|L8.56|
000012  f7fffffe          BL       TIM_SetCounter
;;;60     	while(TIM_GetCounter  (TIM6) < delayus);
000016  bf00              NOP      
                  |L8.24|
000018  4807              LDR      r0,|L8.56|
00001a  f7fffffe          BL       TIM_GetCounter
00001e  4604              MOV      r4,r0
000020  f7fffffe          BL       __aeabi_ui2d
000024  ec410b19          VMOV     d9,r0,r1
000028  ec532b18          VMOV     r2,r3,d8
00002c  f7fffffe          BL       __aeabi_cdcmple
000030  d3f2              BCC      |L8.24|
;;;61     }
000032  ecbd8b04          VPOP     {d8-d9}
000036  bd10              POP      {r4,pc}
;;;62     void delay_ms (double delayms){
                          ENDP

                  |L8.56|
                          DCD      0x40001000

                          AREA ||.data||, DATA, ALIGN=2

                  TimingDelay
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "USER\\f4_sys_tick.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_f4_sys_tick_c_30bba0af____REV16|
#line 138 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_f4_sys_tick_c_30bba0af____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_f4_sys_tick_c_30bba0af____REVSH|
#line 153
|__asm___13_f4_sys_tick_c_30bba0af____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_f4_sys_tick_c_30bba0af____RRX|
#line 328
|__asm___13_f4_sys_tick_c_30bba0af____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
