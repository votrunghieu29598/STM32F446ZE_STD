; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\w25q64_f4.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\w25q64_f4.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I.\USER -I.\SCR -I.\Libraries\CMSIS\Include -I.\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I.\Libraries\STM32F4xx_StdPeriph_Driver\inc -D__UVISION_VERSION=535 -DSTM32F446xx -DUSE_STDPERIPH_DRIVER -DSTM32F446xx -DHSE_VALUE=8000000 --omf_browse=.\objects\w25q64_f4.crf USER\w25q64_f4.c]
                          THUMB

                          AREA ||i.W25Q64_Erase||, CODE, READONLY, ALIGN=2

                  W25Q64_Erase PROC
;;;21     }
;;;22     void W25Q64_Erase (uint8_t Erase, uint32_t Address)
000000  b570              PUSH     {r4-r6,lr}
;;;23     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;24     	//cho phep write xuong W25Q64 
;;;25     	SPI_CS(ENABLE);
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       SPI_CS
;;;26     	W25Q64_Exchange(Write_Enable);
00000c  2006              MOVS     r0,#6
00000e  f7fffffe          BL       W25Q64_Exchange
;;;27     	SPI_CS(DISABLE);
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       SPI_CS
;;;28     	delay_ms(1);
000018  ed9f0b0e          VLDR     d0,|L1.84|
00001c  f7fffffe          BL       delay_ms
;;;29     	
;;;30     	SPI_CS(ENABLE);
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       SPI_CS
;;;31     	W25Q64_Exchange(Erase);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       W25Q64_Exchange
;;;32     	W25Q64_Exchange(Address >> 16);
00002c  f3c44007          UBFX     r0,r4,#16,#8
000030  f7fffffe          BL       W25Q64_Exchange
;;;33     	W25Q64_Exchange(Address >> 8);
000034  f3c42007          UBFX     r0,r4,#8,#8
000038  f7fffffe          BL       W25Q64_Exchange
;;;34     	W25Q64_Exchange(Address);
00003c  b2e0              UXTB     r0,r4
00003e  f7fffffe          BL       W25Q64_Exchange
;;;35     	SPI_CS(DISABLE);
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       SPI_CS
;;;36     	delay_ms(400);
000048  ed9f0b04          VLDR     d0,|L1.92|
00004c  f7fffffe          BL       delay_ms
;;;37     }
000050  bd70              POP      {r4-r6,pc}
;;;38     void W25Q64_Page_Write (uint32_t Address, uint8_t *PtrData, uint32_t len)
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
000054  00000000          DCFD     0x3ff0000000000000 ; 1
000058  3ff00000
                  |L1.92|
00005c  00000000          DCFD     0x4079000000000000 ; 400
000060  40790000

                          AREA ||i.W25Q64_Exchange||, CODE, READONLY, ALIGN=2

                  W25Q64_Exchange PROC
;;;15     }
;;;16     uint8_t W25Q64_Exchange (uint8_t Data)
000000  b510              PUSH     {r4,lr}
;;;17     {
000002  4604              MOV      r4,r0
;;;18     	SPI_I2S_SendData  (SPI1,Data);
000004  4621              MOV      r1,r4
000006  4807              LDR      r0,|L2.36|
000008  f7fffffe          BL       SPI_I2S_SendData
;;;19     	while(SPI_I2S_GetFlagStatus  (SPI1, SPI_I2S_FLAG_BSY) == SET);
00000c  bf00              NOP      
                  |L2.14|
00000e  2180              MOVS     r1,#0x80
000010  4804              LDR      r0,|L2.36|
000012  f7fffffe          BL       SPI_I2S_GetFlagStatus
000016  2801              CMP      r0,#1
000018  d0f9              BEQ      |L2.14|
;;;20     	return  SPI_I2S_ReceiveData (SPI1);
00001a  4802              LDR      r0,|L2.36|
00001c  f7fffffe          BL       SPI_I2S_ReceiveData
000020  b2c0              UXTB     r0,r0
;;;21     }
000022  bd10              POP      {r4,pc}
;;;22     void W25Q64_Erase (uint8_t Erase, uint32_t Address)
                          ENDP

                  |L2.36|
                          DCD      0x40013000

                          AREA ||i.W25Q64_Init||, CODE, READONLY, ALIGN=2

                  W25Q64_Init PROC
;;;2      
;;;3      void W25Q64_Init (void)
000000  b500              PUSH     {lr}
;;;4      {
000002  b085              SUB      sp,sp,#0x14
;;;5      	SPI_Initstruct(SPI1,// spi giao tiep
000004  f44f7082          MOV      r0,#0x104
000008  2100              MOVS     r1,#0
00000a  2228              MOVS     r2,#0x28
00000c  e9cd1201          STRD     r1,r2,[sp,#4]
000010  e9cd1003          STRD     r1,r0,[sp,#0xc]
000014  f44f7000          MOV      r0,#0x200
000018  460b              MOV      r3,r1
00001a  460a              MOV      r2,r1
00001c  21a1              MOVS     r1,#0xa1
00001e  9000              STR      r0,[sp,#0]
000020  4802              LDR      r0,|L3.44|
000022  f7fffffe          BL       SPI_Initstruct
;;;6      								 SPI1_Pin1,//chan giao tiep spi
;;;7      								 SPI_Mode_0,
;;;8      								 SPI_Direction_2Lines_FullDuplex,// full song cong
;;;9      								 SPI_NSS_Soft,// chip select
;;;10     								 SPI_DataSize_8b,// kich thuoc data
;;;11     								 SPI_BaudRatePrescaler_64,// toc do baud
;;;12     								 SPI_FirstBit_MSB,// bit dau tien
;;;13     								 SPI_Mode_Master);// che do giao tiep
;;;14     	
;;;15     }
000026  b005              ADD      sp,sp,#0x14
000028  bd00              POP      {pc}
;;;16     uint8_t W25Q64_Exchange (uint8_t Data)
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      0x40013000

                          AREA ||i.W25Q64_Page_Write||, CODE, READONLY, ALIGN=2

                  W25Q64_Page_Write PROC
;;;37     }
;;;38     void W25Q64_Page_Write (uint32_t Address, uint8_t *PtrData, uint32_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;39     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;40     	//cho phep write xuong W25Q64 
;;;41     	SPI_CS(ENABLE);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       SPI_CS
;;;42     	W25Q64_Exchange(Write_Enable);
000010  2006              MOVS     r0,#6
000012  f7fffffe          BL       W25Q64_Exchange
;;;43     	SPI_CS(DISABLE);
000016  2000              MOVS     r0,#0
000018  f7fffffe          BL       SPI_CS
;;;44     	delay_ms(1);
00001c  ed9f0b13          VLDR     d0,|L4.108|
000020  f7fffffe          BL       delay_ms
;;;45     	
;;;46     	SPI_CS(ENABLE);
000024  2001              MOVS     r0,#1
000026  f7fffffe          BL       SPI_CS
;;;47     	W25Q64_Exchange(Page_Program);
00002a  2002              MOVS     r0,#2
00002c  f7fffffe          BL       W25Q64_Exchange
;;;48     	W25Q64_Exchange(Address >> 16);
000030  f3c44007          UBFX     r0,r4,#16,#8
000034  f7fffffe          BL       W25Q64_Exchange
;;;49     	W25Q64_Exchange(Address >> 8);
000038  f3c42007          UBFX     r0,r4,#8,#8
00003c  f7fffffe          BL       W25Q64_Exchange
;;;50     	W25Q64_Exchange(Address);
000040  b2e0              UXTB     r0,r4
000042  f7fffffe          BL       W25Q64_Exchange
;;;51     	for (u16 i = 0; i < len; i++)
000046  2500              MOVS     r5,#0
000048  e004              B        |L4.84|
                  |L4.74|
;;;52     	{
;;;53     		W25Q64_Exchange(PtrData[i]);
00004a  5d70              LDRB     r0,[r6,r5]
00004c  f7fffffe          BL       W25Q64_Exchange
000050  1c68              ADDS     r0,r5,#1              ;51
000052  b285              UXTH     r5,r0                 ;51
                  |L4.84|
000054  42bd              CMP      r5,r7                 ;51
000056  d3f8              BCC      |L4.74|
;;;54     	}
;;;55     	SPI_CS(DISABLE);
000058  2000              MOVS     r0,#0
00005a  f7fffffe          BL       SPI_CS
;;;56     	delay_ms(3);
00005e  ed9f0b05          VLDR     d0,|L4.116|
000062  f7fffffe          BL       delay_ms
;;;57     }
000066  e8bd81f0          POP      {r4-r8,pc}
;;;58     void W25Q64_Read (uint32_t Address, uint8_t *PtrData,uint32_t len)
                          ENDP

00006a  0000              DCW      0x0000
                  |L4.108|
00006c  00000000          DCFD     0x3ff0000000000000 ; 1
000070  3ff00000
                  |L4.116|
000074  00000000          DCFD     0x4008000000000000 ; 3
000078  40080000

                          AREA ||i.W25Q64_Read||, CODE, READONLY, ALIGN=1

                  W25Q64_Read PROC
;;;57     }
;;;58     void W25Q64_Read (uint32_t Address, uint8_t *PtrData,uint32_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;59     {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;60     	
;;;61     	SPI_CS(ENABLE);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       SPI_CS
;;;62     	W25Q64_Exchange(Read_Data);
000010  2003              MOVS     r0,#3
000012  f7fffffe          BL       W25Q64_Exchange
;;;63     	W25Q64_Exchange(Address >> 16);
000016  f3c44007          UBFX     r0,r4,#16,#8
00001a  f7fffffe          BL       W25Q64_Exchange
;;;64     	W25Q64_Exchange(Address >> 8);
00001e  f3c42007          UBFX     r0,r4,#8,#8
000022  f7fffffe          BL       W25Q64_Exchange
;;;65     	W25Q64_Exchange(Address);
000026  b2e0              UXTB     r0,r4
000028  f7fffffe          BL       W25Q64_Exchange
;;;66     	for (u16 i = 0; i < len; i++)
00002c  2500              MOVS     r5,#0
00002e  e005              B        |L5.60|
                  |L5.48|
;;;67     	{
;;;68     		PtrData[i] = W25Q64_Exchange(0x00);
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       W25Q64_Exchange
000036  5570              STRB     r0,[r6,r5]
000038  1c68              ADDS     r0,r5,#1              ;66
00003a  b285              UXTH     r5,r0                 ;66
                  |L5.60|
00003c  42bd              CMP      r5,r7                 ;66
00003e  d3f7              BCC      |L5.48|
;;;69     	}
;;;70     	SPI_CS(DISABLE);
000040  2000              MOVS     r0,#0
000042  f7fffffe          BL       SPI_CS
;;;71     }	
000046  e8bd81f0          POP      {r4-r8,pc}
;;;72     	
                          ENDP


;*** Start embedded assembler ***

#line 1 "USER\\w25q64_f4.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_w25q64_f4_c_02374414____REV16|
#line 138 ".\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_w25q64_f4_c_02374414____REV16| PROC
#line 139

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_w25q64_f4_c_02374414____REVSH|
#line 153
|__asm___11_w25q64_f4_c_02374414____REVSH| PROC
#line 154

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_w25q64_f4_c_02374414____RRX|
#line 328
|__asm___11_w25q64_f4_c_02374414____RRX| PROC
#line 329

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
